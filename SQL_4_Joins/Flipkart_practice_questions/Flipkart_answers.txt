FLIPKART:- 

EASY TRICK TO SOLVE THESE QUESTIONS:- 
first do the join. you already know which attributes are present in which table. say, for eg:- most profitable category, we know that category in 'category' and profit in 'order_details'. so simply join them using common attribute. 
ONCE JOINED, just print the table. NOW, assume this was the table given to you. apply the rest operations accordingly. NOTE:- keep * in SELECT TO print the whole table. 
NOTE:- in the SELECT, you mention table.col_name and NOT just col_name, after joining tables. this is because the column aren't belonging to the joined table as it is virtual. columns still belong to their old respective tables. 

Q) Find all the orders placed in Pune 
SELECT * FROM flipkart.orders t1 
JOIN flipkart.users t2 
ON t1.user_id = t2.user_id
WHERE t2.city = 'Pune'

Q) Find all orders under the Chairs category 
SELECT * FROM flipkart.order_details t1 
JOIN flipkart.category t2 
ON t1.category_id = t2.category_id
WHERE t2.vertical = 'Chairs'

PRACTICE QUESTIONS:- 
1. Find all profitable orders 
JOINING INTUITION:- profit in 'order_details' and all unique orders in 'orders' 

SELECT t1.order_id, SUM(t2.profit) AS 'profit' FROM flipkart.order_details t1 
JOIN flipkart.order_details t2 
ON t1.order_id = t2.order_id
GROUP BY t1.order_id 
HAVING profit>0

2. Find the customer who has placed the max number of orders 
JOINING INTUITION:- name in 'users' and all order id in 'orders' 

SELECT t2.name, COUNT(*) AS 'count' FROM flipkart.orders t1
JOIN flipkart.users t2
ON t1.user_id = t2.user_id
GROUP BY t2.name
ORDER BY count DESC LIMIT 1

3. Which is the most profitable category
SELECT t2.vertical, SUM(profit) AS 'profit' FROM flipkart.order_details t1
JOIN flipkart.category t2
ON t1.category_id = t2.category_id
GROUP BY vertical
ORDER BY profit DESC LIMIT 1

4. Which is the most profitable state 
JOINING INTUITION:- here, profit in 'order_details' and state in 'users'. But, we can't join them directly as no matching attribute. so, 'users' first joined with 'orders' and then this combination joined with 'order_details'
SELECT t1.state, SUM(t3.profit) AS 'profit' FROM flipkart.users t1
JOIN flipkart.orders t2
ON t1.user_id = t2.user_id
JOIN flipkart.order_details t3
ON t2.order_id = t3.order_id
GROUP BY t1.state 
ORDER BY profit DESC LIMIT 1

5. Find all categories with profits higher than 5000 
SELECT t2.category, SUM(t1.profit) AS 'profit' FROM flipkart.order_details t1
JOIN flipkart.category t2
ON t1.category_id  = t2.category_id
GROUP BY t2.category
HAVING profit > 5000